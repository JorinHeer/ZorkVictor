package ch.bbw.na;import java.io.BufferedReader;import java.io.InputStreamReader;/** * Class Game - the main class of the "Zork" game. *  *  This class is the main class of the "Zork" application. Zork is a very *  simple, text based adventure game.  Users can walk around some scenery. *  That's all. It should really be extended to make it more interesting! *  *  To play this game, create an instance of this class and call the "play" *  routine. *  *  This main class creates and initialises all the others: it creates all *  rooms, creates the parser and starts the game.  It also evaluates the *  commands that the parser returns. */public class Game{    private Parser parser;    private Room currentRoom;    private Room zueri, bern,wallis, shop, moser, schad;    private boolean moserDefeated = false;    public static final String ANSI_RESET = "\u001B[0m";    public static final String ANSI_BLACK = "\u001B[30m";    public static final String ANSI_RED = "\u001B[31m";    public static final String ANSI_GREEN = "\u001B[32m";    public static final String ANSI_YELLOW = "\u001B[33m";    public static final String ANSI_BLUE = "\u001B[34m";    public static final String ANSI_PURPLE = "\u001B[35m";    public static final String ANSI_CYAN = "\u001B[36m";    public static final String ANSI_WHITE = "\u001B[37m";    /**     * Create the game and initialise its internal map.     */    public Game() {        createRooms();        parser = new Parser();    }    /**     * Create all the rooms and link their exits together.     */    private void createRooms() {        // create the rooms        zueri = new Room("Zueri, the Main-Lobby of the Game");        shop = new Room("the shop, you can heal yourself here");        bern = new Room("bern, the capital of switzerland");        wallis = new Room("wallis, the city of the highest mountain of switzerland");        moser = new Room("the classroom of Mr. Moser, he sits in his iron chair of pain and guards the key to the dungeon of Mr. Schad");        schad = new Room("the dungeon of Mr Schad, defeat him to save the children");        // initialise room exits        zueri.setExits(bern, wallis, null, null);        shop.setExits(zueri,null,null,null);        bern.setExits(schad,null, zueri, moser);        wallis.setExits(null,null,shop,zueri);        moser.setExits(null,bern,null,null);        schad.setExits(null,null,bern,null);        currentRoom = zueri;        ; // start game lobby    }    /**     *  Main play routine.  Loops until end of play.     */    public void play() {        printWelcome();        // Enter the main command loop.  Here we repeatedly read commands and        // execute them until the game is over.        boolean finished = false;        while (finished == false) {            Command command = parser.getCommand();            finished = processCommand(command);        }        System.out.println("Thank you for playing.  Good bye.");    }    /**     * Print out the opening message for the player.     */    private void printWelcome() {        System.out.println();        System.out.println("Welcome to switzerland you find yourself in zürich, bellevue!");        System.out.println("Zork is a simple adventure game.");        System.out.println("Type 'help' if you need help.");        System.out.println();        System.out.println(currentRoom.longDescription());    }    /**     * Given a command, process (that is: execute) the command.     * If this command ends the game, true is returned, otherwise false is     * returned.     */    private boolean processCommand(Command command) {        if (command.isUnknown()) {            System.out.println("I don't know what you mean...");            return false;        }        String commandWord = command.getCommandWord();        if (commandWord.equals("help")) {            printHelp();        } else if (commandWord.equals("attack")) {            //if(currentRoom = )            printAttack();        }else if (commandWord.equals("run")) {        }else if (commandWord.equals("go")) {            goRoom(command);        } else if (commandWord.equals("quit")) {            if (command.hasSecondWord()) {                System.out.println("Quit what?");            }            else {                return true; // signal that we want to quit            }        }        else if(commandWord.equals("map")) {            printMap();        }        else if (commandWord.equals("speak")){            return printSpeak(); //true        }        return false;    }    /*     * implementations of user commands:     */    /**     * Print out some help information.     * Here we print some stupid, cryptic message and a list of the     * command words.     */    private boolean printSpeak(){        if (currentRoom== wallis){            System.out.println("You speak to no one, there is not a soul around you are on a mountain ");        }        if (currentRoom == shop){            System.out.println("You speak to the shop owner and he gives you healing potions for free");        }        if (currentRoom == bern){            System.out.println("You speak to alain Berset and take a picture with him");        }        if (currentRoom == moser){            return printQuiz();        }        if (currentRoom == zueri){            System.out.println("You speak to the locals, they tell about the Millionaire Moser who has challenged everyone to solve his quiz with the reward of one million dollar");        }        if (currentRoom == schad){            if (moserDefeated == true){                return printSchadfight();            }else{                System.out.println("You are in front of a huge door which leads to a even bigger cave you can hear children crying in the distance\n" +                                           "you inspect the door for a while, when suddenly a trapdoor opens\n" +                                           "you fall for a while then hit your head and everything gets dark.\n" +                                           "gave over");                return true;            }        }        return false;    }    private void printMap(){        if (currentRoom==zueri) {            System.out.println(                    "                  Secret Cave \n" +                            "                          |\n" +                            " Guardian of the Key----bern\n" +                            "                        |           \n" +                            "                        "+ANSI_RED+"Züri"+ ANSI_RESET+"--------Wallis\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==schad) {            System.out.println(                    "                 "+ANSI_RED+" Secret Cave"+ ANSI_RESET+" \n" +                            "                          |\n" +                            " Guardian of the Key----bern\n" +                            "                        |           \n" +                            "                        Züri--------Wallis\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==moser) {            System.out.println(                    "                  Secret Cave \n" +                            "                          |\n" +                            " "+ANSI_RED+"Guardian of the Key"+ ANSI_RESET+"----bern\n" +                            "                        |           \n" +                            "                        Züri--------Wallis\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==bern) {            System.out.println(                    "                  Secret Cave \n" +                            "                          |\n" +                            " Guardian of the Key----"+ANSI_RED+"bern"+ ANSI_RESET+"\n" +                            "                        |           \n" +                            "                        Züri--------Wallis\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==wallis) {            System.out.println(                    "                  Secret Cave \n" +                            "                          |\n" +                            " Guardian of the Key----bern\n" +                            "                        |           \n" +                            "                        Züri--------"+ANSI_RED+"Wallis"+ ANSI_RESET+"\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==shop) {            System.out.println(                    "                  Secret Cave \n" +                            "                          |\n" +                            " Guardian of the Key----bern\n" +                            "                        |           \n" +                            "                        Züri--------Wallis\n" +                            "                                      |\n" +                            "                                     "+ANSI_RED+"Shop"+ ANSI_RESET+"\n\n");        }    }    private void printHelp() {        System.out.println("You are lost. You are alone. You wander");        System.out.println("A mysterious voice speaks up..");        System.out.println();        System.out.println("Your command words are:");        System.out.println(parser.showCommands());    }    private void printAttack() {        System.out.println("You don't have a weapon");    }    private void back() {        System.out.println("You run away!");    }    /**     * Try to go to one direction. If there is an exit, enter the new     * room, otherwise print an error message.     */    private void goRoom(Command command) {        // if there is no second word, we don't know where to go...        if (!command.hasSecondWord()) {            System.out.println("Go where?");        } else {            String direction = command.getSecondWord();            // Try to leave current room.            Room nextRoom = currentRoom.nextRoom(direction);            if (nextRoom == null)                System.out.println("There is no door!");            else {                currentRoom = nextRoom;                System.out.println(currentRoom.longDescription());            }        }    }    private boolean printQuiz() {        String input= "";        System.out.println("Finally a challenger I have waited for someone worthy for my Quiz\n"+                "If you get my million dollar question right you get one million dollars\n"+                "But you can also choose the key to save the children which are trapped in the Secret Cave\n\n"+                "What is the most popular phone brand in switzerland\n"+                "1. Apple\n"+                "2. Samsung\n"+                "3. Nokia");        BufferedReader reader = new BufferedReader(new InputStreamReader(                System.in));        try {        input = reader.readLine();        }        catch (java.io.IOException exc) {            System.out.println("There was an error during reading: "                                       + exc.getMessage());        }        if (input.equals("Apple")|| input.equals("1")){            System.out.println("YOU ARE ABSOLUTELY CORRECT\n"+                    "Do you want the Million dollar or the Key to save the children?\n" +                                       "1. million\n" +                                       "2. children\n");        }else{            System.out.println("YOU ARE...\n" +                                       "absolutely not correct\n" +                                       "The punishment is death");            return true;        }        try {            input = reader.readLine();        }        catch (java.io.IOException exc) {            System.out.println("There was an error during reading: "                                       + exc.getMessage());        }        if (input.equals("children")|| input.equals("2")){            System.out.println("You have chosen wisely\n" +                                       "go rescue the children from Mr. Schad in the cave in the north of Bern\n" +                                       "I believe in you\n you are our last hope");            moserDefeated = true;        }else{            System.out.println("Im disappointed...\n" +                                       "Go live your greedy life and die alone\n\n\n" +                                       "3 Years later\n" +                                       "You are sitting on a beach drinking alone\n" +                                       "You ask yourself if your selfish decision will haunt you someday, until then you will enjoy your life with expensive food and wordly riches until the Karma will get you");            return true;        }        return false;    }    private boolean printSchadfight(){        System.out.println( "You are in front of a huge door which leads to a even bigger cave you can hear children crying in the distance\n" +                                    "you see a keyhole and insert your key from Moser to open the huge door\n" +                                    "Suddenly you see Mr. Schad in front of you, he bends down to your head and starts to wishper:\n" +                                    "\"Lets end this now\"\n" +                                    "He instantly attacks you and dealt huge damage your rips and you almost got fractured rips the damage was to huge cant defeat him like this\n" +                                    "He ends it with one kick in your face.\n" +                                    "You think to yourself: \"I should have chosen the money :)\"\n" +                                    "The kids will never be saved \n" +                                    "Game over");        return  true;    }}